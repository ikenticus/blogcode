#!/bin/bash
#
# Generate Bearer token for Google Cloud Platform
#

help() {
    echo -e "\nUsage: ${0##*/} <vault-path> <pem-key> <email-key>"
    echo -e "\nExamples:"
    echo -e "  secret/paas-api/desknet-subscriber/staging pubsub_subscriber_private_key pubsub_subscriber_client_email"
    echo -e "  secret/cs-sports/jenkins/nearline/api-services-sagarin-app private_key client_email"
    echo
    exit 1
}

base64url() {
    openssl base64 -A | tr '+/' '-_' | tr -d '='
}

vault=$1; shift
if [ -z "$vault" ]; then
    help
fi
private=${1:-private_key}; shift
client=${1:-client_email}; shift
email=$(vault read -field=$client $vault)

case $vault in
    *sub*) scope=pubsub ;;
    *) scope=devstorage.full_control
esac

pem=/tmp/gcp.pem
vault read -field=$private $vault > $pem
if [ ! -z "$(grep '\\n' $pem)" ]; then
    echo -e $(vault read -field=$private $vault) > $pem
fi

jwt_head=$(echo -n '{"alg":"RS256","typ":"JWT"}' | base64url)

# data = claim
jwt_data=$(echo -n "{\"iss\":\"$email\",\
\"scope\":\"https://www.googleapis.com/auth/$scope\",\
\"aud\":\"https://www.googleapis.com/oauth2/v4/token\",\
\"exp\":$(gdate +%s --date=+600\ seconds),\
\"iat\":$(gdate +%s)}" | base64url)

jwt_sign=$(echo -n "${jwt_head}.${jwt_data}" | openssl dgst -sha256 -sign $pem | base64url )

out=$(curl -s -X POST https://www.googleapis.com/oauth2/v4/token \
    --data-urlencode "grant_type=urn:ietf:params:oauth:grant-type:jwt-bearer" \
    --data-urlencode "assertion=${jwt_head}.${jwt_data}.${jwt_sign}")

echo $out | jq
echo $out | jq -r '.access_token'

